{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;\f2\fnil\fcharset0 Monaco;
\f3\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red106\green62\blue62;\red63\green127\blue95;
\red0\green0\blue255;\red0\green0\blue192;\red255\green0\blue0;\red87\green96\blue106;\red244\green246\blue249;
\red27\green31\blue34;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid101\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid102\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid201\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid202\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww25400\viewh16000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Spring 10 steps\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	
\f1 \uc0\u9642 
\f0 	}Note about loose coupling that means create an application so that we can change the methodology in one place by using interface, For example:\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}we can use both  quick sort or bubble sort  dependent on situation. so we have to create 2 classes quick sort and bubble sort. in the binarySearch(need 2 methods: sort before and binary search)  we only use either bubble sort or quick sort without using INTERFACE. WITH INTERFACE, we just use interface as instantiate by and use constructor to offering the switch when call BinarySearch class:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 INTERFACE:\
\
\pard\pardeftab720\partightenfactor0

\f2\fs22 \cf2 package\cf0  com.in28minutes.spring.basics.springin5steps;\
\
\cf2 public\cf0  \cf2 interface\cf0  SortAlgorithm \{\
	\cf2 public\cf0  \cf2 int\cf0 [] sort(\cf2 int\cf0 [] \cf3 numbers\cf0 );\
\}
\f0\fs24 \
\pard\tx720\tx1440\pardeftab720\partightenfactor0

\f2\fs22 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 BUBBLE SORT CLASS implement the interface\
\pard\pardeftab720\partightenfactor0
\ls2\ilvl1
\f2\fs22 \cf2 {\listtext	\uc0\u8259 	}package\cf0  com.in28minutes.spring.basics.springin5steps;\
{\listtext	\uc0\u8259 	}\
\ls2\ilvl1\cf2 {\listtext	\uc0\u8259 	}public\cf0  \cf2 class\cf0  BubbleSortAlgorithm \cf2 implements\cf0  SortAlgorithm \{\
{\listtext	\uc0\u8259 	}\cf2 public\cf0  \cf2 int\cf0 [] sort(\cf2 int\cf0 [] \cf3 numbers\cf0 ) \{\
{\listtext	\uc0\u8259 	}\cf4 //logic sort\cf0 \
{\listtext	\uc0\u8259 	}\
{\listtext	\uc0\u8259 	}\cf2 return\cf0  \cf3 numbers\cf0 ;\
{\listtext	\uc0\u8259 	}\}\
\pard\tx720\tx1440\pardeftab720\partightenfactor0
\cf0 QUICK SORT CLASS:\
\pard\pardeftab720\partightenfactor0
\ls3\ilvl1\cf0 {\listtext	\uc0\u8259 	}\}\
\ls3\ilvl1\cf2 {\listtext	\uc0\u8259 	}package\cf0  com.in28minutes.spring.basics.springin5steps;\
{\listtext	\uc0\u8259 	}\
\ls3\ilvl1\cf2 {\listtext	\uc0\u8259 	}public\cf0  \cf2 class\cf0  QuickSortAlgorithm \cf2 implements\cf0  SortAlgorithm \{\
{\listtext	\uc0\u8259 	}\cf2 public\cf0  \cf2 int\cf0 [] sort(\cf2 int\cf0 [] \cf3 numbers\cf0 ) \{\
{\listtext	\uc0\u8259 	}\cf4 //logic sort\cf0 \
{\listtext	\uc0\u8259 	}\
{\listtext	\uc0\u8259 	}\cf2 return\cf0  \cf3 numbers\cf0 ;\
{\listtext	\uc0\u8259 	}\}\
{\listtext	\uc0\u8259 	}\
{\listtext	\uc0\u8259 	}\}\
\pard\tx940\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li1440\fi-1440\pardirnatural\partightenfactor0
\ls3\ilvl1
\f0\fs36 \cf0 Binarysearchimpl class: 
\fs24 \
\pard\pardeftab720\partightenfactor0

\f2\fs22 \cf2 package\cf0  com.in28minutes.spring.basics.springin5steps;\
\
\cf2 public\cf0  \cf2 class\cf0  BinarySearchImpl \{\
	\
	\cf5 private SortAlgorithm sortalgorithm;\
	\
	public BinarySearchImpl(SortAlgorithm sortalgorithm) \{\
		super();\
		this.sortalgorithm = sortalgorithm;\
	\}\
\pard\pardeftab720\partightenfactor0
\cf0 \
	\cf2 public\cf0  \cf2 int\cf0  BinarySearch(\cf2 int\cf0 [] \cf3 numbers\cf0 , \cf2 int\cf0  \cf3 numberSearchFor\cf0 ) \{\
		\cf4 //implement sorting \cf0 \
		\cf4 //BubbleSortAlgorithm bubblesort = new BubbleSortAlgorithm();\cf0 \
		\cf5 int [] \ul sortedNumbers\ulnone  = sortalgorithm.sort(numbers);\cf0 \
		System.\cf6 out\cf0 .println(\cf6 sortalgorithm\cf0 );\
		\
		\cf4 //Search array\cf0 \
		\
		\cf2 return\cf0  0;\
	\}\
\
\}\
main class:\
\pard\pardeftab720\partightenfactor0
\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf5 BinarySearchImpl binarysearch = new BinarySearchImpl(\cf7 new BubbleSortAlgorithm()\cf5 );// sort method can be able to changed in parameter\cf0 \
		\cf2 int\cf0  \cf3 result\cf0  =\cf3 binarysearch\cf0 .BinarySearch(\cf2 new\cf0  \cf2 int\cf0 [] \{12,4,6\}, 3);\
		System.\cf6 out\cf0 .println(\cf3 result\cf0 );\
		\
	\}\
\
To work with spring we need to know:\
\
\pard\pardeftab720\partightenfactor0

\f3\fs27\fsmilli13600 \cf8 \cb9 \expnd0\expndtw0\kerning0
// What are the beans? \
Component is a bean\cf10 \
\cf8 // What are the dependencies of a bean?\cf10 \
\cf8 // Where to search for beans\
\cf7 if you has 2 component the same type  we can use @primary to the one you want to use(check step6)\cf8 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}